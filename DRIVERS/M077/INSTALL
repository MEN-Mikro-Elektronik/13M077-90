
Linux Driver for MEN M77-Module, brief manual                        2003/06/11
===============================================================================

ts@men.de: Attention: this Documentation is valid for usage on kernel 2.4 only.
It refers to the serial_m77_24.c File which has remained unchanged. 
Support for new Modules M45N and M69N is available under kernel 2.6 only, 
refer to html documentation for it.   08/2007


This driver provides a character/tty device driver compliant with the
interface provided by the standard serial.c driver of Linux.  It runs
on Linux Kernel 2.4.x and can be used on Intel or PowerPC systems with
M-module carrier boards for PCI, CompactPCI or VMEbus.


INSTALLATION
------------

*** IMPORTANT ***

- Before installing this driver, make sure that you have installed the
  MEN MDIS system package 13M000-13 Revision 3.0-pre4 or later!  This
  package can be downloaded from MENs website
  www.men.de/software/mdis.htm


If you are __not__ using the MDIS configuration wizard:
	- Unzip 13m07790.zip to /opt/menlinux:
	$ cd /opt/menlinux
	$ unzip -a /path-where-zip-is-located/13m07790.zip

	- Copy one of the example configurations delivered with MDIS (see
	  MDIS user guide 21m00007.pdf) into a directory of your choise. Let's
	  call it ~/myconf.

	- Create a descriptor for the M-module carrier board in use	(see MDIS
	  user guide chapter H 4.5). Typically you can use/modify one of the 
	  template descriptors contained in the template configuration.

	- Modify ~/myconf Makefile. Add the following line after the macro
	  ALL_LL_TOOLS:
	
		ALL_RAW := DRIVERS/M077/DRIVER/driver.mak

	In some configurations, you will need to use the "swapped" variant
	of the driver. See  MDIS user guide chapter H 4.4.1 for more info.
	If you need the swapped variant, specify "driver_sw.mak" rather
	"driver.mak"

	- Compile the MDIS configuration (see MDIS user guide chapter 4.7)


If you are using the MDIS configuration wizard:

	- Create project via wizard, select CPU and carrier board.

	- Install the 13m07790.zip package via wizards Packaga|Install Driver Menu
		
	- Right click on carrier board and select "Add component..."
	
	- Select M77 (NOTE: The device name within MDIS wizard doesn't care)

	- Build everything: Build|Build


- Continue to Install files on the target system 
	(see MDIS user guide chapter 5.1)



CONFIGURATION
-------------

- Create Device nodes for the M77 (you can skip this step if the
  device file system (CONFIG_DEVFS_FS) is used):

  M77 uses major number 224. For one M77 module create the following node on
  your *target* file system:

  mknod /dev/ttyD0 c 224 0	 
  mknod /dev/ttyD1 c 224 1
  mknod /dev/ttyD2 c 224 2	 
  mknod /dev/ttyD3 c 224 3	 


- Load carrier board driver and create carrier board device:

  E.g. if you use a A201 carrier:

  $ modprobe men_bb_a201
  $ modprobe men_mdis_kernel	
	
  Create an carrier board device (must match one of the names in /etc/mdis):

  $ mdis_createdev -b a201_1	


- Load and configure M77 driver:

  The following example configures all M77 channels for RS232 mode. The
  M77 is mounted on the a201_1 carrier in slot 3:

  $ modprobe men_serial_m77 minor=0 brdName=a201_1 slotNo=3 \
                            mode=7,7,7,7 echo=0,0,0,0

  See detailed description below for more info on the line modes.

  When the driver could be loaded successfully, you should see something like
  this (call "dmsg"):	

	M77-Module serial driver version 1.0 (2003-04-02) \
	  with no serial options enabled
	ttyD00 at iomem 0xc9034e00 is a 16C954. (Phys interface 7)
	ttyD01 at iomem 0xc9034e10 is a 16C954. (Phys interface 7)
	ttyD02 at iomem 0xc9034e20 is a 16C954. (Phys interface 7)
	ttyD03 at iomem 0xc9034e30 is a 16C954. (Phys interface 7)

- Now the serial ports can be accessed under /dev/ttyD0. If you
  use the device filesystem, the devices are name /dev/ttd/0 .. x




M77 GENERAL INFO
----------------

The M077 is a QUAD UART M-Module. It supports four high performance
UARTs, with RS232/423 - RS422/485 level capability, on the M-Module
Rear I/O connector J2 or on the 25 pin Front-Panel D-Sub connector
J3. Handshake lines are not supported. The onboard UART controller is
the Oxford OX16C954, with 128 byte FIFOs.


M77 MODULE PARAMETERS
---------------------


The driver supports the following module parameters:

 - minor 
	minor number of the modules first channel.
    Further channels receive automatically the three following numbers.

 - brdName
	name of the carrier board device (e.g. a201_1)

 - slotNo
 	Module slot where M77 is mounted on carrier board

 - mode 
    Interface mode for each channel:
      0 - RS423
	  1 - RS422 half duplex
      2 - RS422 full duplex
      3 - RS485 half duplex
      4 - RS485 full duplex
      7 - RS232 

 - echo (is only used in half duplex mode)
	echo-mode for each channel:
	  0 = disable receiver while sending (supress echo)
	  1 = enable receiver while sending (receives back sent characters)



Example 1:

	M77 in slot 3 of a A201 Carrier Board
	The 4 ports should be configured as RS485 in full duplex.

	modprobe men_serial_m77 minor=0 brdName=a201_1 slotNo=3 mode=4,4,4,4 \
		echo=0,0,0,0

	Or use an entry in modules.conf like this:

	options men_serial_m77 minor=0 brdName=a201_1 slot=3 mode=4,4,4,4 \
		echo=0,0,0,0


Example 2:

    Three M77-Modules, two in slot 2 and 3 of a A201 carrier board
	with device description a201_1, and one in slot 0 of a A201 carrier
	board with device description a201_2. The 12 ports should be
	configured as RS422 in half duplex mode, with no echo suppression.
 

	modprobe men_serial_m77 minor=0,4,16 brdName=a201_1,a201_1,a201_2 \
			slotNo=2,3,0 \
		    mode=1,1,1,1,1,1,1,1,1,1,1,1 \ 
		    echo=1,1,1,1,1,1,1,1,1,1,1,1 



SUPPORTED IOCTLs
-----------------


The driver supports two additionaly ioctl's.

Include the header "serial_m77.h" into your source.


cmd paramter          argument
------------          ---------
M77_PHYS_INT_SET   |  M77_RS423    - set channel to RS423 mode
                   |  M77_RS422_HD - RS422 half duplex mode
                   |  M77_RS422_FD - RS422 full duplex mode
                   |  M77_RS485_HD - RS485 half duplex mode
                   |  M77_RS485_FD - RS485 full duplex mode
                   |  M77_RS232    - RS232 mode

M77_ECHO_SUPPRESS  |  0 - receive line controlled by DTR# (suppress echo)
                   |  1 - receive line enabled (allow echo)


For example, the following ioctl calls set the corresponding channel
in RS485 half duplex mode and suppress echo:

 ioctl(fd, M77_PHYS_INT_SET, M77_RS485_HD);
 ioctl(fd, M77_ECHO_SUPPRESS, 0);








